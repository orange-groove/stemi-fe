// This file is auto-generated by @hey-api/openapi-ts

export type DownloadStemsRequest = {
    stems?: Array<(string)>;
    file_type?: string;
};

/**
 * The ID of the playlist.
 */
export type ParameterPlaylistId = number;

/**
 * The ID of the song.
 */
export type ParameterSongId = number;

export type Playlist = {
    id?: number;
    title?: string;
    user_id?: string;
    song_count?: number;
    created_at?: string;
};

export type Song = {
    id?: number;
    title?: string;
    artist?: string;
    playlist_id?: string;
    image_url?: string;
    tracks?: Array<Track>;
    song_key?: string;
    tempo_changes?: Array<{
        tempo?: number;
    }>;
    created_at?: string;
};

export type Track = {
    name: string;
    url: string;
};

export type UpdateSongRequest = Song;

export type CreatePlaylistData = {
    body: Playlist;
};

export type CreatePlaylistResponse = ({
    playlist?: Playlist;
    message?: string;
});

export type CreatePlaylistError = ({
    error?: string;
});

export type GetAllPlaylistsResponse = ({
    playlists?: Array<Playlist>;
    message?: string;
});

export type GetAllPlaylistsError = ({
    error?: string;
});

export type GetPlaylistData = {
    path: {
        /**
         * The ID of the playlist.
         */
        playlist_id: number;
    };
};

export type GetPlaylistResponse = ({
    playlist?: Playlist;
    message?: string;
});

export type GetPlaylistError = ({
    error?: string;
});

export type UpdatePlaylistData = {
    body: Playlist;
    path: {
        /**
         * The ID of the playlist.
         */
        playlist_id: number;
    };
};

export type UpdatePlaylistResponse = (Playlist);

export type UpdatePlaylistError = ({
    error?: string;
});

export type DeletePlaylistData = {
    path: {
        /**
         * The ID of the playlist.
         */
        playlist_id: number;
    };
};

export type DeletePlaylistResponse = ({
    playlist?: Playlist;
    message?: string;
});

export type DeletePlaylistError = ({
    error?: string;
});

export type GetPlaylistSongsData = {
    path: {
        /**
         * The ID of the playlist.
         */
        playlist_id: number;
    };
};

export type GetPlaylistSongsResponse = ({
    songs?: Array<{
        songs?: Song;
    }>;
    message?: string;
});

export type GetPlaylistSongsError = ({
    error?: string;
});

export type AddPlaylistSongData = {
    path: {
        /**
         * The ID of the playlist.
         */
        playlist_id: number;
        /**
         * The ID of the song.
         */
        song_id: number;
    };
};

export type AddPlaylistSongResponse = ({
    song?: Song;
    message?: string;
});

export type AddPlaylistSongError = ({
    error?: string;
});

export type DeletePlaylistSongData = {
    path: {
        /**
         * The ID of the playlist.
         */
        playlist_id: number;
        /**
         * The ID of the song.
         */
        song_id: number;
    };
};

export type DeletePlaylistSongResponse = ({
    song?: Song;
    message?: string;
});

export type DeletePlaylistSongError = ({
    error?: string;
});

export type CreateSongData = {
    body?: {
        /**
         * The audio file for the song.
         */
        file?: (Blob | File);
        /**
         * The YouTube URL for the song.
         */
        youtube_url?: string;
    };
};

export type CreateSongResponse = ({
    song?: Song;
    message?: string;
});

export type CreateSongError = ({
    error?: string;
});

export type GetAllSongsResponse = ({
    songs?: Array<Song>;
    message?: string;
});

export type GetAllSongsError = ({
    error?: string;
});

export type GetSongData = {
    path: {
        /**
         * The ID of the song.
         */
        song_id: number;
    };
};

export type GetSongResponse = ({
    song?: Song;
    message?: string;
});

export type GetSongError = ({
    error?: string;
});

export type UpdateSongData = {
    body: UpdateSongRequest;
    path: {
        /**
         * The ID of the song.
         */
        song_id: number;
    };
};

export type UpdateSongResponse = ({
    song?: Song;
    message?: string;
});

export type UpdateSongError = ({
    error?: string;
});

export type DeleteSongData = {
    path: {
        /**
         * The ID of the song.
         */
        song_id: number;
    };
};

export type DeleteSongResponse = ({
    song?: Song;
    message?: string;
});

export type DeleteSongError = ({
    error?: string;
});

export type DownloadStemsData = {
    body: DownloadStemsRequest;
    path: {
        /**
         * The ID of the song.
         */
        song_id: number;
    };
};

export type DownloadStemsResponse = ((Blob | File));

export type DownloadStemsError = ({
    error?: string;
});

export type DownloadMixdownData = {
    body: DownloadStemsRequest;
    path: {
        /**
         * The ID of the song.
         */
        song_id: number;
    };
};

export type DownloadMixdownResponse = ((Blob | File));

export type DownloadMixdownError = ({
    error?: string;
});